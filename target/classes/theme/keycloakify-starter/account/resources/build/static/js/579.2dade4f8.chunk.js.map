{"version":3,"file":"static/js/579.2dade4f8.chunk.js","mappings":"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","sources":["keycloak-theme/login/pages/Register.tsx"],"sourcesContent":["// ejected using 'npx eject-keycloak-page'\r\nimport { clsx } from \"keycloakify/tools/clsx\";\r\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\r\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\r\nimport type { KcContext } from \"../kcContext\";\r\nimport type { I18n } from \"../i18n\";\r\n\r\nexport default function Register(props: PageProps<Extract<KcContext, { pageId: \"register.ftl\" }>, I18n>) {\r\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\r\n\r\n    const { getClassName } = useGetClassName({\r\n        doUseDefaultCss,\r\n        classes\r\n    });\r\n\r\n    const { url, messagesPerField, register, realm, passwordRequired, recaptchaRequired, recaptchaSiteKey } = kcContext;\r\n\r\n    const { msg, msgStr } = i18n;\r\n\r\n    return (\r\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"registerTitle\")}>\r\n            <form id=\"kc-register-form\" className={getClassName(\"kcFormClass\")} action={url.registrationAction} method=\"post\">\r\n                <div\r\n                    className={clsx(\r\n                        getClassName(\"kcFormGroupClass\"),\r\n                        messagesPerField.printIfExists(\"firstName\", getClassName(\"kcFormGroupErrorClass\"))\r\n                    )}\r\n                >\r\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                        <label htmlFor=\"firstName\" className={getClassName(\"kcLabelClass\")}>\r\n                            {msg(\"firstName\")}\r\n                        </label>\r\n                    </div>\r\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            className={getClassName(\"kcInputClass\")}\r\n                            name=\"firstName\"\r\n                            defaultValue={register.formData.firstName ?? \"\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className={clsx(\r\n                        getClassName(\"kcFormGroupClass\"),\r\n                        messagesPerField.printIfExists(\"lastName\", getClassName(\"kcFormGroupErrorClass\"))\r\n                    )}\r\n                >\r\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                        <label htmlFor=\"lastName\" className={getClassName(\"kcLabelClass\")}>\r\n                            {msg(\"lastName\")}\r\n                        </label>\r\n                    </div>\r\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            className={getClassName(\"kcInputClass\")}\r\n                            name=\"lastName\"\r\n                            defaultValue={register.formData.lastName ?? \"\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className={clsx(getClassName(\"kcFormGroupClass\"), messagesPerField.printIfExists(\"email\", getClassName(\"kcFormGroupErrorClass\")))}\r\n                >\r\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                        <label htmlFor=\"email\" className={getClassName(\"kcLabelClass\")}>\r\n                            {msg(\"email\")}\r\n                        </label>\r\n                    </div>\r\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"email\"\r\n                            className={getClassName(\"kcInputClass\")}\r\n                            name=\"email\"\r\n                            defaultValue={register.formData.email ?? \"\"}\r\n                            autoComplete=\"email\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {!realm.registrationEmailAsUsername && (\r\n                    <div\r\n                        className={clsx(\r\n                            getClassName(\"kcFormGroupClass\"),\r\n                            messagesPerField.printIfExists(\"username\", getClassName(\"kcFormGroupErrorClass\"))\r\n                        )}\r\n                    >\r\n                        <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                            <label htmlFor=\"username\" className={getClassName(\"kcLabelClass\")}>\r\n                                {msg(\"username\")}\r\n                            </label>\r\n                        </div>\r\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                className={getClassName(\"kcInputClass\")}\r\n                                name=\"username\"\r\n                                defaultValue={register.formData.username ?? \"\"}\r\n                                autoComplete=\"username\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {passwordRequired && (\r\n                    <>\r\n                        <div\r\n                            className={clsx(\r\n                                getClassName(\"kcFormGroupClass\"),\r\n                                messagesPerField.printIfExists(\"password\", getClassName(\"kcFormGroupErrorClass\"))\r\n                            )}\r\n                        >\r\n                            <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                                <label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\r\n                                    {msg(\"password\")}\r\n                                </label>\r\n                            </div>\r\n                            <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    className={getClassName(\"kcInputClass\")}\r\n                                    name=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={clsx(\r\n                                getClassName(\"kcFormGroupClass\"),\r\n                                messagesPerField.printIfExists(\"password-confirm\", getClassName(\"kcFormGroupErrorClass\"))\r\n                            )}\r\n                        >\r\n                            <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                                <label htmlFor=\"password-confirm\" className={getClassName(\"kcLabelClass\")}>\r\n                                    {msg(\"passwordConfirm\")}\r\n                                </label>\r\n                            </div>\r\n                            <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                                <input type=\"password\" id=\"password-confirm\" className={getClassName(\"kcInputClass\")} name=\"password-confirm\" />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {recaptchaRequired && (\r\n                    <div className=\"form-group\">\r\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                            <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey}></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className={getClassName(\"kcFormGroupClass\")}>\r\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\r\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\r\n                            <span>\r\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\r\n                        <input\r\n                            className={clsx(\r\n                                getClassName(\"kcButtonClass\"),\r\n                                getClassName(\"kcButtonPrimaryClass\"),\r\n                                getClassName(\"kcButtonBlockClass\"),\r\n                                getClassName(\"kcButtonLargeClass\")\r\n                            )}\r\n                            type=\"submit\"\r\n                            value={msgStr(\"doRegister\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Template>\r\n    );\r\n}\r\n"],"names":["Register","props","_register$formData$fi","_register$formData$la","_register$formData$em","_register$formData$us","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","url","messagesPerField","register","realm","passwordRequired","recaptchaRequired","recaptchaSiteKey","msg","msgStr","_jsx","headerNode","children","_jsxs","id","className","action","registrationAction","method","clsx","printIfExists","htmlFor","type","name","defaultValue","formData","firstName","lastName","email","autoComplete","registrationEmailAsUsername","username","_Fragment","href","loginUrl","value"],"sourceRoot":""}