{"version":3,"file":"static/js/6475.7a140ad1.chunk.js","mappings":"kXAYe,SAASA,EAAMC,GAC1B,IAAQC,EAAwDD,EAAxDC,UAAWC,EAA6CF,EAA7CE,KAAMC,EAAuCH,EAAvCG,gBAAiBC,EAAsBJ,EAAtBI,SAAUC,EAAYL,EAAZK,QAE5CC,GAAiBC,EAAAA,EAAAA,GAAgB,CACrCJ,gBAAAA,EACAE,QAAAA,IAFIC,aAKAE,EAAgBN,EAAhBM,IAAKC,EAAWP,EAAXO,QAIbC,EAAAA,EAAAA,IAAiB,CACbT,UAAAA,EACA,qBAAuB,WAAD,IAAAU,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOf,GAPuBN,EAAkBD,EAAlBC,mBAEtBC,EAEO,OADDD,EACcO,EACFC,IAKpB,uBAAwBC,QAAM,CAAAL,EAAAE,KAAA,eAAAF,EAAAM,OAAA,SAGvBT,GAAO,cAAAG,EAAAE,KAAA,EAGWK,MAAMV,GAASW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAAE,KAAD,EAAzD,OAAdZ,EAAcE,EAAAW,KAAAX,EAAAM,OAAA,SAEbR,GAAc,wBAAAE,EAAAY,OAAA,GAAAlB,EAAA,KAExB,gBAAAmB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,EApBsB,MAuB3BC,EAAAA,EAAAA,IAAyBC,EAAAA,GAEzB,IAAQC,EAAQtC,EAARsC,IAEFC,EAAeF,EAAAA,EAAAA,MAErB,YAAqBG,IAAjBD,EACO,MAIPE,EAAAA,EAAAA,MAACtC,EAAQ,CAAOH,UAAAA,EAAWC,KAAAA,EAAMC,gBAAAA,EAAiBE,QAAAA,EAAWsC,gBAAgB,EAAOC,WAAYpC,EAAI,cAAcqC,SAAA,EAC9GC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,gBAAeF,UACnBC,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,CAAAH,SAAEL,OAEfE,EAAAA,EAAAA,MAAA,QAAMO,UAAU,eAAeC,OAAQX,EAAIY,YAAaC,OAAO,OAAMP,SAAA,EACjEC,EAAAA,EAAAA,KAAA,SACIG,WAAWI,EAAAA,EAAAA,GACP/C,EAAa,iBACbA,EAAa,iBACbA,EAAa,iBACbA,EAAa,wBACbA,EAAa,uBAEjBgD,KAAK,SACLP,GAAG,YACHQ,KAAK,SACLC,MAAO/C,EAAO,eAElBqC,EAAAA,EAAAA,KAAA,SACIG,WAAWI,EAAAA,EAAAA,GAAK/C,EAAa,iBAAkBA,EAAa,wBAAyBA,EAAa,uBAClGgD,KAAK,SACLP,GAAG,aACHQ,KAAK,SACLC,MAAO/C,EAAO,mBAGtBqC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAG3B,C","sources":["keycloak-theme/login/pages/Terms.tsx"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\r\nimport { useRerenderOnStateChange } from \"evt/hooks\";\r\nimport { Markdown } from \"keycloakify/tools/Markdown\";\r\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\r\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\r\nimport { evtTermMarkdown } from \"keycloakify/login/lib/useDownloadTerms\";\r\nimport type { KcContext } from \"../kcContext\";\r\nimport type { I18n } from \"../i18n\";\r\nimport { useDownloadTerms } from \"keycloakify/login\";\r\nimport tos_en_url from \"../assets/tos_en.md\";\r\nimport tos_fr_url from \"../assets/tos_fr.md\";\r\n\r\nexport default function Terms(props: PageProps<Extract<KcContext, { pageId: \"terms.ftl\" }>, I18n>) {\r\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\r\n\r\n    const { getClassName } = useGetClassName({\r\n        doUseDefaultCss,\r\n        classes\r\n    });\r\n\r\n    const { msg, msgStr } = i18n;\r\n\r\n    // NOTE: If you aren't going to customize the layout of the page you can move this hook to \r\n    // KcApp.tsx, see: https://docs.keycloakify.dev/terms-and-conditions\r\n    useDownloadTerms({\r\n        kcContext,\r\n        \"downloadTermMarkdown\": async ({currentLanguageTag}) => {\r\n\r\n            const tos_url = (() => {\r\n                switch (currentLanguageTag) {\r\n                    case \"fr\": return tos_fr_url;\r\n                    default: return tos_en_url;\r\n                }\r\n            })();\r\n\r\n\r\n            if (\"__STORYBOOK_ADDONS\" in window) {\r\n                // NOTE: In storybook, when you import a .md file you get the content of the file.\r\n                // In Create React App on the other hand you get an url to the file.\r\n                return tos_url;\r\n            }\r\n\r\n            const markdownString = await fetch(tos_url).then(response => response.text());\r\n\r\n            return markdownString;\r\n\r\n        }\r\n    });\r\n\r\n    useRerenderOnStateChange(evtTermMarkdown);\r\n\r\n    const { url } = kcContext;\r\n\r\n    const termMarkdown = evtTermMarkdown.state;\r\n\r\n    if (termMarkdown === undefined) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} displayMessage={false} headerNode={msg(\"termsTitle\")}>\r\n            <div id=\"kc-terms-text\">\r\n                <Markdown>{termMarkdown}</Markdown>\r\n            </div>\r\n            <form className=\"form-actions\" action={url.loginAction} method=\"POST\">\r\n                <input\r\n                    className={clsx(\r\n                        getClassName(\"kcButtonClass\"),\r\n                        getClassName(\"kcButtonClass\"),\r\n                        getClassName(\"kcButtonClass\"),\r\n                        getClassName(\"kcButtonPrimaryClass\"),\r\n                        getClassName(\"kcButtonLargeClass\")\r\n                    )}\r\n                    name=\"accept\"\r\n                    id=\"kc-accept\"\r\n                    type=\"submit\"\r\n                    value={msgStr(\"doAccept\")}\r\n                />\r\n                <input\r\n                    className={clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonDefaultClass\"), getClassName(\"kcButtonLargeClass\"))}\r\n                    name=\"cancel\"\r\n                    id=\"kc-decline\"\r\n                    type=\"submit\"\r\n                    value={msgStr(\"doDecline\")}\r\n                />\r\n            </form>\r\n            <div className=\"clearfix\" />\r\n        </Template>\r\n    );\r\n}\r\n"],"names":["Terms","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","msg","msgStr","useDownloadTerms","_downloadTermMarkdown","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","currentLanguageTag","tos_url","markdownString","wrap","_context","prev","next","tos_fr_url","tos_en_url","window","abrupt","fetch","then","response","text","sent","stop","_x","apply","arguments","useRerenderOnStateChange","evtTermMarkdown","url","termMarkdown","undefined","_jsxs","displayMessage","headerNode","children","_jsx","id","Markdown","className","action","loginAction","method","clsx","name","type","value"],"sourceRoot":""}