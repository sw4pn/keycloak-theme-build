{"version":3,"file":"static/js/3870.a72a2cc8.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/login/Template.tsx"],"sourcesContent":["import { assert } from \"keycloakify/tools/assert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { usePrepareTemplate } from \"keycloakify/lib/usePrepareTemplate\";\nimport { type TemplateProps } from \"keycloakify/login/TemplateProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"./kcContext\";\nimport type { I18n } from \"./i18n\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\n\n    const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext;\n\n    const { isReady } = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n            `${url.resourcesPath}/css/login.css`\n        ],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": getClassName(\"kcBodyClass\")\n    });\n\n    if (!isReady) {\n        return null;\n    }\n\n    document.title = i18n.msgStr(\"loginTitle\", kcContext.realm.displayName);\n\n    return (\n        <div className={getClassName(\"kcLoginClass\")}>\n            <div id=\"kc-header\" className={getClassName(\"kcHeaderClass\")}>\n                <div id=\"kc-header-wrapper\" className={getClassName(\"kcHeaderWrapperClass\")}>\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}\n                </div>\n            </div>\n\n            <div className={clsx(getClassName(\"kcFormCardClass\"), displayWide && getClassName(\"kcFormCardAccountClass\"))}>\n                <header className={getClassName(\"kcFormHeaderClass\")}>\n                    {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                        <div id=\"kc-locale\">\n                            <div id=\"kc-locale-wrapper\" className={getClassName(\"kcLocaleWrapperClass\")}>\n                                <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                    <a href=\"#\" id=\"kc-current-locale-link\">\n                                        {labelBySupportedLanguageTag[currentLanguageTag]}\n                                    </a>\n                                    <ul>\n                                        {locale.supported.map(({ languageTag }) => (\n                                            <li key={languageTag} className=\"kc-dropdown-item\">\n                                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                <a href=\"#\" onClick={() => changeLocale(languageTag)}>\n                                                    {labelBySupportedLanguageTag[languageTag]}\n                                                </a>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n                        displayRequiredFields ? (\n                            <div className={getClassName(\"kcContentWrapperClass\")}>\n                                <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                    <span className=\"subtitle\">\n                                        <span className=\"required\">*</span>\n                                        {msg(\"requiredFields\")}\n                                    </span>\n                                </div>\n                                <div className=\"col-md-10\">\n                                    <h1 id=\"kc-page-title\">{headerNode}</h1>\n                                </div>\n                            </div>\n                        ) : (\n                            <h1 id=\"kc-page-title\">{headerNode}</h1>\n                        )\n                    ) : displayRequiredFields ? (\n                        <div className={getClassName(\"kcContentWrapperClass\")}>\n                            <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                <span className=\"subtitle\">\n                                    <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                                </span>\n                            </div>\n                            <div className=\"col-md-10\">\n                                {showUsernameNode}\n                                <div className={getClassName(\"kcFormGroupClass\")}>\n                                    <div id=\"kc-username\">\n                                        <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                        <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                            <div className=\"kc-login-tooltip\">\n                                                <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                                <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                            </div>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <>\n                            {showUsernameNode}\n                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                <div id=\"kc-username\">\n                                    <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                    <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                        <div className=\"kc-login-tooltip\">\n                                            <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                            <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                        </div>\n                                    </a>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </header>\n                <div id=\"kc-content\">\n                    <div id=\"kc-content-wrapper\">\n                        {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                        {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                            <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                {message.type === \"success\" && <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                {message.type === \"warning\" && <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                {message.type === \"error\" && <span className={getClassName(\"kcFeedbackErrorIcon\")}></span>}\n                                {message.type === \"info\" && <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                <span\n                                    className=\"kc-feedback-text\"\n                                    dangerouslySetInnerHTML={{\n                                        \"__html\": message.summary\n                                    }}\n                                />\n                            </div>\n                        )}\n                        {children}\n                        {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n                            <form\n                                id=\"kc-select-try-another-way-form\"\n                                action={url.loginAction}\n                                method=\"post\"\n                                className={clsx(displayWide && getClassName(\"kcContentWrapperClass\"))}\n                            >\n                                <div\n                                    className={clsx(\n                                        displayWide && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                                    )}\n                                >\n                                    <div className={getClassName(\"kcFormGroupClass\")}>\n                                        <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\" />\n                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                        <a\n                                            href=\"#\"\n                                            id=\"try-another-way\"\n                                            onClick={() => {\n                                                document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                return false;\n                                            }}\n                                        >\n                                            {msg(\"doTryAnotherWay\")}\n                                        </a>\n                                    </div>\n                                </div>\n                            </form>\n                        )}\n                        {displayInfo && (\n                            <div id=\"kc-info\" className={getClassName(\"kcSignUpClass\")}>\n                                <div id=\"kc-info-wrapper\" className={getClassName(\"kcInfoAreaWrapperClass\")}>\n                                    {infoNode}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":["Template","props","_props$displayInfo","displayInfo","_props$displayMessage","displayMessage","_props$displayRequire","displayRequiredFields","_props$displayWide","displayWide","_props$showAnotherWay","showAnotherWayIfPresent","headerNode","_props$showUsernameNo","showUsernameNode","_props$infoNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","children","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","usePrepareTemplate","concat","resourcesCommonPath","resourcesPath","isReady","document","title","msgStr","displayName","_jsxs","Object","assign","className","_jsx","id","displayNameHtml","clsx","internationalizationEnabled","assert","undefined","supported","length","href","map","_ref","languageTag","onClick","showUsername","showResetCredentials","attemptedUsername","loginRestartFlowUrl","_Fragment","type","dangerouslySetInnerHTML","summary","showTryAnotherWayLink","action","loginAction","method","name","value","forms","submit"],"sourceRoot":""}